(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{357:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"_1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1.概述")]),t._v(" "),s("p",[s("code",[t._v("String")]),t._v(" 对象是 JavaScript 原生提供的三个包装对象之一，用来生成字符串对象。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符串对象：类似数组的对象")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" s1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "string"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n\ns2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "abc"')]),t._v("\n")])])]),s("p",[t._v("除了用作构造函数，String对象还可以当作工具方法使用，将任意类型的值转为字符串。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "true"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "5"')]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-静态方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-静态方法"}},[t._v("#")]),t._v(" 2.静态方法")]),t._v(" "),s("h4",{attrs:{id:"_2-1-string-fromcharcode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-string-fromcharcode"}},[t._v("#")]),t._v(" 2.1 String.fromCharCode()")]),t._v(" "),s("ol",[s("li",[t._v("返回值：这些码点组成的字符串")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\nString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("97")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "a"')]),t._v("\nString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("108")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("108")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "hello"')]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("注意：该方法不支持 Unicode 码点大于0xFFFF的字符，即传入的参数不能大于0xFFFF（即十进制的 65535）")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x20BB7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "ஷ"')]),t._v("\nString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x20BB7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0BB7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[t._v("上面代码中，String.fromCharCode参数0x20BB7大于0xFFFF，导致返回结果出错。0x20BB7对应的字符是汉字𠮷，但是返回结果却是另一个字符（码点0x0BB7）。这是因为String.fromCharCode发现参数值大于0xFFFF，就会忽略多出的位（即忽略0x20BB7里面的2）。\n这种现象的根本原因在于，码点大于0xFFFF的字符占用四个字节，而 JavaScript 默认支持两个字节的字符。这种情况下，必须把0x20BB7拆成两个字符表示。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xD842")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xDFB7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "𠮷"')]),t._v("\n")])])]),s("p",[t._v("上面代码中，0x20BB7拆成两个字符0xD842和0xDFB7（即两个两字节字符，合成一个四字节字符），就能得到正确的结果。码点大于0xFFFF的字符的四字节表示法，由 UTF-16 编码方法决定。")]),t._v(" "),s("h3",{attrs:{id:"_3-实例属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-实例属性"}},[t._v("#")]),t._v(" 3.实例属性")]),t._v(" "),s("h4",{attrs:{id:"_3-1-string-prototype-length"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-string-prototype-length"}},[t._v("#")]),t._v(" 3.1 String.prototype.length")]),t._v(" "),s("ol",[s("li",[t._v("返回值：字符串的长度")])]),t._v(" "),s("h3",{attrs:{id:"_4-实例方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-实例方法"}},[t._v("#")]),t._v(" 4.实例方法")]),t._v(" "),s("h4",{attrs:{id:"_4-1-string-prototype-charat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-string-prototype-charat"}},[t._v("#")]),t._v(" 4.1 String.prototype.charAt()")]),t._v(" "),s("ol",[s("li",[t._v("返回值：指定位置的字符（从0开始）")]),t._v(" "),s("li",[t._v("注意：如果参数为负数，或大于等于字符串的长度，charAt返回空字符串。")])]),t._v(" "),s("h4",{attrs:{id:"_4-2-string-prototype-charcodeat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-string-prototype-charcodeat"}},[t._v("#")]),t._v(" 4.2 String.prototype.charCodeAt()")]),t._v(" "),s("ol",[s("li",[t._v("返回值：字符串指定位置的 Unicode 码点（十进制表示），相当于String.fromCharCode()的逆操作")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 98  b的 Unicode 码点是98")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 97  如果没有任何参数，charCodeAt返回首字符的 Unicode 码点")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果参数为负数，或大于等于字符串的长度，charCodeAt返回NaN。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("注意：\ncharCodeAt方法返回的 Unicode 码点不会大于65536（0xFFFF），也就是说，只返回两个字节的字符的码点。如果遇到码点大于 65536 的字符（四个字节的字符），必须连续使用两次charCodeAt，不仅读入charCodeAt(i)，还要读入charCodeAt(i+1)，将两个值放在一起，才能得到准确的字符。")])]),t._v(" "),s("h4",{attrs:{id:"_4-3-string-prototype-concat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-string-prototype-concat"}},[t._v("#")]),t._v(" 4.3 String.prototype.concat()")]),t._v(" "),s("ol",[s("li",[t._v("返回值：一个新字符串")]),t._v(" "),s("li",[t._v("是否改变原字符串：否")]),t._v(" "),s("li",[t._v("该方法可以接受多个参数")]),t._v(" "),s("li",[t._v("如果参数不是字符串，concat方法会将其先转为字符串，然后再连接")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" one "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" two "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" three "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" two"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" three"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "123"')]),t._v("\none "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" two "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" three "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "33"')]),t._v("\n")])])]),s("h4",{attrs:{id:"_4-4-string-prototype-slice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-string-prototype-slice"}},[t._v("#")]),t._v(" 4.4 String.prototype.slice()")]),t._v(" "),s("ol",[s("li",[t._v("返回值：从原字符串取出子字符串并返回")]),t._v(" "),s("li",[t._v("是否改变原字符串：否")]),t._v(" "),s("li",[t._v("[起始位置(从0开始)，终止位置)")]),t._v(" "),s("li",[t._v("负参：倒数计算（倒着数第几个位置）")])]),t._v(" "),s("h4",{attrs:{id:"_4-5-string-prototype-substring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-string-prototype-substring"}},[t._v("#")]),t._v(" 4.5 String.prototype.substring()")]),t._v(" "),s("ol",[s("li",[t._v("返回值：从原字符串取出子字符串并返回")]),t._v(" "),s("li",[t._v("是否改变原字符串：否")]),t._v(" "),s("li",[t._v("如果第一个参数大于第二个参数，substring方法会自动更换两个参数的位置")]),t._v(" "),s("li",[t._v("负参：substring方法会自动将负数转为0。")])]),t._v(" "),s("h4",{attrs:{id:"_4-6-string-prototype-substr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-string-prototype-substr"}},[t._v("#")]),t._v(" 4.6 String.prototype.substr()")]),t._v(" "),s("ol",[s("li",[t._v("返回值：从原字符串取出子字符串并返回")]),t._v(" "),s("li",[t._v("是否改变原字符串：否")]),t._v(" "),s("li",[t._v("[开始位置（从0开始计算）, 子字符串的长度)")]),t._v(" "),s("li",[t._v("如果第一个参数是负数，表示倒数计算的字符位置。如果第二个参数是负数，将被自动转为0，因此会返回空字符串。")])]),t._v(" "),s("h4",{attrs:{id:"_4-7-string-prototype-indexof-string-prototype-lastindexof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-string-prototype-indexof-string-prototype-lastindexof"}},[t._v("#")]),t._v(" 4.7 String.prototype.indexOf()，String.prototype.lastIndexOf()")]),t._v(" "),s("ol",[s("li",[t._v("返回值：第一次出现的位置，返回结果是匹配开始的位置。如果返回-1，就表示不匹配")]),t._v(" "),s("li",[t._v("第二个参数：从该位置开始向后匹配")]),t._v(" "),s("li",[t._v("lastIndexOf的第二个参数表示从该位置起向前匹配")])]),t._v(" "),s("h4",{attrs:{id:"_4-8-string-prototype-trim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-string-prototype-trim"}},[t._v("#")]),t._v(" 4.8 String.prototype.trim()")]),t._v(" "),s("ol",[s("li",[t._v("返回值：新字符串")]),t._v(" "),s("li",[t._v("是否改变原字符串：否")]),t._v(" "),s("li",[t._v("该方法去除的不仅是空格，还包括制表符（"),s("code",[t._v("\\t")]),t._v("、"),s("code",[t._v("\\v")]),t._v("）、换行符（"),s("code",[t._v("\\n")]),t._v("）和回车符（"),s("code",[t._v("\\r")]),t._v("）")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\r\\nabc \\t'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'abc'")]),t._v("\n")])])]),s("h4",{attrs:{id:"_4-9-string-prototype-tolowercase-string-prototype-touppercase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-9-string-prototype-tolowercase-string-prototype-touppercase"}},[t._v("#")]),t._v(" 4.9 String.prototype.toLowerCase()，String.prototype.toUpperCase()")]),t._v(" "),s("ol",[s("li",[t._v("返回值：新字符串")]),t._v(" "),s("li",[t._v("是否改变原字符串：否")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("toLowerCase()")]),t._v(" "),s("p",[t._v("用处：将一个字符串全部转为小写")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "hello world"')]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("toUpperCase()")]),t._v(" "),s("p",[t._v("用处：将一个字符串全部转为大写")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "HELLO WORLD"')]),t._v("\n")])])])])]),t._v(" "),s("h4",{attrs:{id:"_4-10-string-prototype-match"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-10-string-prototype-match"}},[t._v("#")]),t._v(" 4.10 String.prototype.match()")]),t._v(" "),s("ol",[s("li",[t._v("作用：用于确定原字符串是否匹配某个子字符串")]),t._v(" "),s("li",[t._v("返回值：一个数组")]),t._v(" "),s("li",[t._v("如果没有找到匹配，则返回null")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cat, bat, sat, fat'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'at'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["at"]')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cat, bat, sat, fat'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("返回的数组还有index属性和input属性，分别表示匹配字符串开始的位置和原始字符串。")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" matches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cat, bat, sat, fat'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'at'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmatches"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nmatches"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "cat, bat, sat, fat"')]),t._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("match方法还可以使用正则表达式作为参数")])]),t._v(" "),s("h4",{attrs:{id:"_4-11-string-prototype-search-string-prototype-replace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-11-string-prototype-search-string-prototype-replace"}},[t._v("#")]),t._v(" 4.11 String.prototype.search()，String.prototype.replace()")]),t._v(" "),s("ul",[s("li",[t._v("search()")])]),t._v(" "),s("ol",[s("li",[t._v("作用：同match()")]),t._v(" "),s("li",[t._v("返回值：匹配的第一个位置，如果没有找到匹配，则返回-1")])]),t._v(" "),s("ul",[s("li",[t._v("replace()")])]),t._v(" "),s("ol",[s("li",[t._v("作用：替换匹配的子字符串")]),t._v(" "),s("li",[t._v("一般情况下只替换第一个匹配（除非使用带有g修饰符的正则表达式）")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "baa"')]),t._v("\n")])])]),s("p",[s("strong",[t._v("search与replace方法还可以使用正则表达式作为参数")])]),t._v(" "),s("h4",{attrs:{id:"_4-12-string-prototype-split"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-12-string-prototype-split"}},[t._v("#")]),t._v(" 4.12 String.prototype.split()")]),t._v(" "),s("ol",[s("li",[t._v("作用：按照给定规则分割字符串")]),t._v(" "),s("li",[t._v("返回值：一个由分割出来的子字符串组成的数组")]),t._v(" "),s("li",[t._v("如果分割规则为空字符串，则返回数组的成员是原字符串的每一个字符")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a|b|c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["a", "|", "b", "|", "c"]')]),t._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("如果省略参数，则返回数组的唯一成员就是原字符串")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a|b|c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["a|b|c"]')]),t._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("如果两个分割符中间没有其他字符，则返回数组之中会有一个空字符串")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a||c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['a', '', 'c']")]),t._v("\n")])])]),s("ol",{attrs:{start:"6"}},[s("li",[t._v("如果前面或后面没有其他字符,则返回数组的第一个或最后一个成员是一个空字符串")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|b|c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["", "b", "c"]')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a|b|'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["a", "b", ""]')]),t._v("\n")])])]),s("ol",{attrs:{start:"7"}},[s("li",[t._v("第二个参数，限定返回数组的最大成员数")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a|b|c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// []")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a|b|c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["a"]')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a|b|c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["a", "b"]')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a|b|c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["a", "b", "c"]')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a|b|c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["a", "b", "c"]')]),t._v("\n")])])]),s("ol",{attrs:{start:"8"}},[s("li",[t._v("split方法还可以使用正则表达式作为参数")])]),t._v(" "),s("h4",{attrs:{id:"_4-13-string-prototype-localecompare"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-13-string-prototype-localecompare"}},[t._v("#")]),t._v(" 4.13 String.prototype.localeCompare()")]),t._v(" "),s("ol",[s("li",[t._v("作用：用于比较两个字符串")]),t._v(" "),s("li",[t._v("返回值：一个整数，如果小于0，表示第一个字符串小于第二个字符串；如果等于0，表示两者相等；如果大于0，表示第一个字符串大于第二个字符串。")]),t._v(" "),s("li",[t._v("该方法的最大特点，就是会考虑自然语言的顺序")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正常情况下，大写的英文字母小于小写字母")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false  采用的是 Unicode 码点比较: B的码点是66，而a的码点是97")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// localeCompare方法会考虑自然语言的排序情况，将B排在a的前面。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("localeCompare")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("第二个参数: 指定所使用的语言（默认是英语）")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ä'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("localeCompare")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'z'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'de'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ä'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("localeCompare")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'z'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sv'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上面代码中，de表示德语，sv表示瑞典语。德语中，ä小于z，所以返回-1；瑞典语中，ä大于z，所以返回1。")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);